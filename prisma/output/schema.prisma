generator client {
  provider = "prisma-client-js"
  output   = "./output"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Member {
  id   String @id @default(uuid())
  name String
  role String

  // relations
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id])

  // others fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

model Profile {
  id       String @id @default(uuid())
  username String @unique
  email    String @unique
  imgUrl   String @db.Text

  // relations
  servers  Server[]
  members  Member[]
  channels Channel[]

  // others fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(uuid())
  name       String
  imgUrl     String @db.Text
  inviteCode String @db.Text

  // relations
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id])

  members  Member[]
  channels Channel[]

  // other fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum CHANNEL_TYPE {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String       @id @default(uuid())
  name String
  type CHANNEL_TYPE @default(TEXT)

  // relations
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id])

  // other fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}
