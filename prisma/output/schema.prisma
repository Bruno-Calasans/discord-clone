generator client {
  provider = "prisma-client-js"
  output   = "./output"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Member {
  id        String   @id @default(uuid())
  name      String
  role      String
  profileId String
  serverId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server   @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

model Profile {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  imgUrl    String    @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  servers   Server[]
  members   Member[]
  channels  Channel[]
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imgUrl     String    @db.Text
  inviteCode String    @db.Text
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  profileId  String
  profile    Profile   @relation(fields: [profileId], references: [id])
  members    Member[]
  channels   Channel[]

  @@index([profileId])
}

model Channel {
  id        String       @id @default(uuid())
  name      String
  type      CHANNEL_TYPE @default(TEXT)
  serverId  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  profileId String
  profile   Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server       @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

enum CHANNEL_TYPE {
  TEXT
  AUDIO
  VIDEO
}
